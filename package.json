{
    "name": "leaper",
    "displayName": "Leaper",
    "description": "`Tab` to jump out of autoclosing pairs like braces and quotes.",
    "version": "0.9.2",
    "publisher": "OnlyLys",
    "license": "MIT",
    "icon": "images/icon.png",
    "repository": {
        "type": "git",
        "url": "https://github.com/OnlyLys/Leaper.git"
    },
    "homepage": "https://github.com/OnlyLys/Leaper",
    "bugs": {
        "url": "https://github.com/OnlyLys/Leaper/issues"
    },
    "categories": [
        "Other"
    ],
    "keywords": [
        "Jump Out",
        "Tab Out",
        "Brackets",
        "Quotes",
        "Parentheses"
    ],
    "activationEvents": [
        "*"
    ],
    "main": "./out/extension",
    "contributes": {
        "configuration": {
            "type": "object",
            "title": "Leaper",
            "properties": {
                "leaper.decorateAll": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "If `true`, will decorate all detected pairs. \n\nIf `false`, will only decorate the detected pairs nearest to each cursor.",
                    "scope": "language-overridable"
                },
                "leaper.detectedPairs": {
                    "type": "array",
                    "default": [
                        "()",
                        "[]",
                        "{}",
                        "<>",
                        "``",
                        "''",
                        "\"\""
                    ],
                    "items": {
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2
                    },
                    "uniqueItems": true,
                    "markdownDescription": "The autoclosing pairs to detect. \n\nNote that there is no support for pairs that are more than 1 character wide on either side, so `(())`, for instance, is disallowed.",
                    "scope": "language-overridable"
                },
                "leaper.decorationOptions": {
                    "type": "object",
                    "default": {
                        "outlineColor": {
                            "id": "editorBracketMatch.border"
                        },
                        "outlineWidth": "1px",
                        "outlineStyle": "solid",
                        "fontWeight": "bold"
                    },
                    "not": {
                        "required": [
                            "rangeBehavior"
                        ]
                    },
                    "uniqueItems": true,
                    "markdownDescription": "Specify how the closing side of each pair is decorated. \n\nNote: \n\n- With the exception of `rangeBehavior`, all of vscode's [`DecorationRenderOptions`](https://code.visualstudio.com/api/references/vscode-api#DecorationRenderOptions) can be specified. However, options aside from the `outline`, `border` and `font`-related ones have not been tested, and may therefore introduce unwanted side-effects when used. \n\n- Any options that require a non-`string` type can be specified with an object literal. For example, see the default value of this setting, where a [`ThemeColor`](https://code.visualstudio.com/api/references/vscode-api#ThemeColor) is specified for the `outlineColor` property. \n\n- Decorations can be disabled by configuring this setting to `{}`.",
                    "scope": "language-overridable"
                },
                "leaper.decorateOnlyNearestPair": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "~~If `false`, will decorate all pairs instead of just the nearest one.~~",
                    "deprecationMessage": "DEPRECATED since 0.7.0 \n\nThis configuration was renamed to `leaper.decorateAll` for clarity."
                },
                "leaper.additionalTriggerPairs": {
                    "$comment": "This deprecated configuration has no default value in the package manifest. The default value was previously hardcoded in source code.",
                    "type": "array",
                    "default": [],
                    "markdownDescription": "~~Set additional pairs that the extension will detect. Currently there is no support for pairs that are more than 1 character wide on each side.~~",
                    "deprecationMessage": "DEPRECATED since 0.7.0 \n\nThis configuration was deprecated in favour of `leaper.detectedPairs`, as the newer configuration allows for the specification of pairs in a simpler format. Furthermore, it allows users to disable detection of the default set of pairs. Previously, the default set of pairs was hardcoded and could not be changed."
                },
                "leaper.customDecorationOptions": {
                    "$comment": "This deprecated configuration has no default value in the package manifest. The default value was previously hardcoded in source code.",
                    "type": "object",
                    "default": null,
                    "markdownDescription": "~~Customize the decoration of the closing character of the pair.~~",
                    "deprecationMessage": "DEPRECATED since 0.7.0 \n\nThis configuration was renamed to `leaper.decorationOptions` for clarity."
                }
            }
        },
        "commands": [
            {
                "command": "leaper.leap",
                "title": "Leap",
                "category": "Leaper"
            },
            {
                "command": "leaper.escapeLeaperMode",
                "title": "Escape Leaper Mode",
                "category": "Leaper"
            }
        ],
        "menus": {
            "commandPalette": [
                {
                    "command": "leaper.leap",
                    "when": "leaper.inLeaperMode"
                },
                {
                    "command": "leaper.escapeLeaperMode",
                    "when": "leaper.inLeaperMode"
                }
            ]
        },
        "keybindings": [
            {
                "key": "tab",
                "command": "leaper.leap",
                "when": "leaper.inLeaperMode && leaper.hasLineOfSight && editorTextFocus && !editorHasSelection && !editorTabMovesFocus && !suggestWidgetVisible"
            },
            {
                "key": "shift+escape",
                "command": "leaper.escapeLeaperMode",
                "when": "leaper.inLeaperMode"
            }
        ]
    },
    "engines": {
        "vscode": "^1.57.1"
    },
    "scripts": {
        "build-release": "npm run lint && npm run typecheck && esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node --minify",
        "build-dev": "tsc -p ./ --allowUnusedLabels true --noUnusedParameters false --noUnusedLocals false",
        "lint": "eslint src --ext ts",
        "postinstall": "npm run build-dev",
        "pretest": "npm run build-dev && node ./out/test/gen-env.js",
        "test": "node ./out/test/run-tests.js",
        "typecheck": "tsc -noEmit -p ./",
        "vscode:prepublish": "npm run build-release"
    },
    "dependencies": {
        "@onlylys/vscode-validated-configuration-reader": "github:OnlyLys/vscode-validated-configuration-reader#semver:^0.5.0"
    },
    "devDependencies": {
        "@types/glob": "^7.1.3",
        "@types/mocha": "^8.2.2",
        "@types/node": "^15.12.4",
        "@types/vscode": "^1.57.0",
        "@typescript-eslint/eslint-plugin": "^4.27.0",
        "@typescript-eslint/parser": "^4.27.0",
        "esbuild": "^0.12.9",
        "eslint": "^7.29.0",
        "glob": "^7.1.7",
        "mocha": "^9.0.1",
        "typescript": "^4.3.2",
        "vscode-test": "^1.5.2"
    }
}
